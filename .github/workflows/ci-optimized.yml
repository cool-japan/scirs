# Optimized CI workflow for large Rust workspaces
name: CI Optimized

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always
  # Reduce parallel jobs to manage memory
  CARGO_BUILD_JOBS: 2
  # Use minimal debug info
  CARGO_PROFILE_DEV_DEBUG: 1
  # Disable incremental compilation to save disk space
  CARGO_INCREMENTAL: 0
  # Remove debug assertions in CI
  CARGO_PROFILE_DEV_DEBUG_ASSERTIONS: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Split builds to reduce memory pressure
        cargo-profile: [ci, test]
    
    steps:
    - uses: actions/checkout@v4
    
    # Free up disk space before build
    - name: Free Disk Space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker system prune -af
        df -h
    
    # Use sparse checkout for faster clones
    - name: Configure Git
      run: |
        git config core.preloadindex true
        git config core.fscache true
        git config gc.auto 256
    
    # Cache dependencies more aggressively
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.cargo-profile }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.cargo-profile }}-
          ${{ runner.os }}-cargo-
    
    # Install system dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev pkg-config
    
    # Build with profile-specific optimizations
    - name: Build workspace
      run: |
        if [ "${{ matrix.cargo-profile }}" = "ci" ]; then
          cargo build --profile ci --workspace --exclude scirs2-benchmarks
        else
          cargo build --workspace --exclude scirs2-benchmarks
        fi
    
    # Test with reduced parallelism
    - name: Run tests
      run: |
        # Run tests for core crates only to save space
        cargo test --profile ${{ matrix.cargo-profile }} \
          -p scirs2-core \
          -p scirs2-linalg \
          -p scirs2-stats \
          --no-fail-fast \
          -- --test-threads=2
    
    # Clean up after each step to free space
    - name: Cleanup build artifacts
      run: |
        cargo clean --profile ${{ matrix.cargo-profile }}
        rm -rf target/debug/deps
        rm -rf target/debug/.fingerprint
        df -h

  clippy-and-fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Free Disk Space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        df -h
    
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev pkg-config
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy (lib only)
      run: cargo clippy --lib --all-features -- -D warnings